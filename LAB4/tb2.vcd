$date
	Tue Aug 19 14:37:51 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb2 $end
$var wire 1 ! s3 $end
$var wire 1 " s2 $end
$var wire 1 # s1 $end
$var wire 1 $ s0 $end
$var wire 1 % carryout $end
$var reg 1 & carryin $end
$var reg 1 ' x0 $end
$var reg 1 ( x1 $end
$var reg 1 ) x2 $end
$var reg 1 * x3 $end
$var reg 1 + y0 $end
$var reg 1 , y1 $end
$var reg 1 - y2 $end
$var reg 1 . y3 $end
$scope module dut $end
$var wire 1 & carryin $end
$var wire 1 ' x0 $end
$var wire 1 ( x1 $end
$var wire 1 ) x2 $end
$var wire 1 * x3 $end
$var wire 1 + y0 $end
$var wire 1 , y1 $end
$var wire 1 - y2 $end
$var wire 1 . y3 $end
$var wire 1 ! s3 $end
$var wire 1 " s2 $end
$var wire 1 # s1 $end
$var wire 1 $ s0 $end
$var wire 1 % carryout $end
$var wire 1 / c3 $end
$var wire 1 0 c2 $end
$var wire 1 1 c1 $end
$scope module f0 $end
$var wire 1 & Cin $end
$var wire 1 1 Cout $end
$var wire 1 $ s $end
$var wire 1 ' x $end
$var wire 1 + y $end
$upscope $end
$scope module f1 $end
$var wire 1 1 Cin $end
$var wire 1 0 Cout $end
$var wire 1 # s $end
$var wire 1 ( x $end
$var wire 1 , y $end
$upscope $end
$scope module f2 $end
$var wire 1 0 Cin $end
$var wire 1 / Cout $end
$var wire 1 " s $end
$var wire 1 ) x $end
$var wire 1 - y $end
$upscope $end
$scope module f3 $end
$var wire 1 / Cin $end
$var wire 1 % Cout $end
$var wire 1 ! s $end
$var wire 1 * x $end
$var wire 1 . y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
11
00
0/
0.
0-
0,
1+
0*
0)
0(
1'
0&
0%
0$
1#
0"
0!
$end
#10
0%
0/
01
00
1$
1"
1#
1!
0+
1-
1(
1*
#20
1%
0!
1/
0"
10
0#
11
0$
1+
1,
0-
0'
0(
1)
1&
#30
