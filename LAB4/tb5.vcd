$date
	Tue Aug 19 15:34:25 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb5 $end
$var wire 1 ! s3 $end
$var wire 1 " s2 $end
$var wire 1 # s1 $end
$var wire 1 $ s0 $end
$var wire 1 % cout $end
$var reg 1 & cin $end
$var reg 1 ' x0 $end
$var reg 1 ( x1 $end
$var reg 1 ) x2 $end
$var reg 1 * x3 $end
$var reg 1 + y0 $end
$var reg 1 , y1 $end
$var reg 1 - y2 $end
$var reg 1 . y3 $end
$scope module dut $end
$var wire 1 & carryin $end
$var wire 1 % carryout $end
$var wire 1 / cfix $end
$var wire 1 $ s0 $end
$var wire 1 # s1 $end
$var wire 1 " s2 $end
$var wire 1 ! s3 $end
$var wire 1 ' x0 $end
$var wire 1 ( x1 $end
$var wire 1 ) x2 $end
$var wire 1 * x3 $end
$var wire 1 + y0 $end
$var wire 1 , y1 $end
$var wire 1 - y2 $end
$var wire 1 . y3 $end
$var wire 1 0 z3 $end
$var wire 1 1 z2 $end
$var wire 1 2 z1 $end
$var wire 1 3 z0 $end
$var wire 1 4 w3 $end
$var wire 1 5 w2 $end
$var wire 1 6 w1 $end
$var wire 1 7 w0 $end
$var wire 1 8 c2 $end
$var wire 1 9 c1 $end
$scope module a1 $end
$var wire 1 & carryin $end
$var wire 1 ' x0 $end
$var wire 1 ( x1 $end
$var wire 1 ) x2 $end
$var wire 1 * x3 $end
$var wire 1 + y0 $end
$var wire 1 , y1 $end
$var wire 1 - y2 $end
$var wire 1 . y3 $end
$var wire 1 0 s3 $end
$var wire 1 1 s2 $end
$var wire 1 2 s1 $end
$var wire 1 3 s0 $end
$var wire 1 9 carryout $end
$var wire 1 : c3 $end
$var wire 1 ; c2 $end
$var wire 1 < c1 $end
$scope module f0 $end
$var wire 1 & Cin $end
$var wire 1 < Cout $end
$var wire 1 3 s $end
$var wire 1 ' x $end
$var wire 1 + y $end
$upscope $end
$scope module f1 $end
$var wire 1 < Cin $end
$var wire 1 ; Cout $end
$var wire 1 2 s $end
$var wire 1 ( x $end
$var wire 1 , y $end
$upscope $end
$scope module f2 $end
$var wire 1 ; Cin $end
$var wire 1 : Cout $end
$var wire 1 1 s $end
$var wire 1 ) x $end
$var wire 1 - y $end
$upscope $end
$scope module f3 $end
$var wire 1 : Cin $end
$var wire 1 9 Cout $end
$var wire 1 0 s $end
$var wire 1 * x $end
$var wire 1 . y $end
$upscope $end
$upscope $end
$scope module a2 $end
$var wire 1 = carryin $end
$var wire 1 3 x0 $end
$var wire 1 2 x1 $end
$var wire 1 1 x2 $end
$var wire 1 0 x3 $end
$var wire 1 > y0 $end
$var wire 1 / y1 $end
$var wire 1 / y2 $end
$var wire 1 ? y3 $end
$var wire 1 4 s3 $end
$var wire 1 5 s2 $end
$var wire 1 6 s1 $end
$var wire 1 7 s0 $end
$var wire 1 8 carryout $end
$var wire 1 @ c3 $end
$var wire 1 A c2 $end
$var wire 1 B c1 $end
$scope module f0 $end
$var wire 1 = Cin $end
$var wire 1 B Cout $end
$var wire 1 7 s $end
$var wire 1 3 x $end
$var wire 1 > y $end
$upscope $end
$scope module f1 $end
$var wire 1 B Cin $end
$var wire 1 A Cout $end
$var wire 1 6 s $end
$var wire 1 2 x $end
$var wire 1 / y $end
$upscope $end
$scope module f2 $end
$var wire 1 A Cin $end
$var wire 1 @ Cout $end
$var wire 1 5 s $end
$var wire 1 1 x $end
$var wire 1 / y $end
$upscope $end
$scope module f3 $end
$var wire 1 @ Cin $end
$var wire 1 8 Cout $end
$var wire 1 4 s $end
$var wire 1 0 x $end
$var wire 1 ? y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0B
0A
0@
0?
0>
0=
0<
0;
1:
09
08
17
06
05
14
13
02
01
10
0/
0.
1-
0,
0+
0*
1)
0(
1'
0&
0%
1$
0#
0"
1!
$end
#10
1%
18
0!
04
1@
1#
16
1/
0"
05
11
1;
1,
1(
#20
1A
1@
08
0#
06
0"
05
1!
14
0$
07
12
01
00
1<
0;
19
0:
03
1.
0-
0,
1+
1*
0)
0(
#30
0!
04
0@
1"
15
0A
0%
0/
1$
17
02
11
09
0<
1;
13
0.
1,
0*
1(
0'
#40
