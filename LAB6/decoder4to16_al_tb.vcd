$date
	Tue Sep 23 15:04:49 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module decoder4to16_al_tb $end
$var wire 16 ! y [15:0] $end
$var reg 1 " En $end
$var reg 4 # w [3:0] $end
$var integer 32 $ i [31:0] $end
$scope module uut $end
$var wire 1 " En $end
$var wire 4 % w [3:0] $end
$var wire 16 & y [15:0] $end
$var wire 4 ' en [3:0] $end
$scope module dec0 $end
$var wire 1 ( En $end
$var wire 2 ) w [1:0] $end
$var reg 4 * y [3:0] $end
$upscope $end
$scope module dec1 $end
$var wire 1 + En $end
$var wire 2 , w [1:0] $end
$var reg 4 - y [3:0] $end
$upscope $end
$scope module dec2 $end
$var wire 1 . En $end
$var wire 2 / w [1:0] $end
$var reg 4 0 y [3:0] $end
$upscope $end
$scope module dec3 $end
$var wire 1 1 En $end
$var wire 2 2 w [1:0] $end
$var reg 4 3 y [3:0] $end
$upscope $end
$scope module decMSB $end
$var wire 1 " En $end
$var wire 2 4 w [1:0] $end
$var reg 4 5 y [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1110 5
b0 4
b1111 3
b0 2
01
b1111 0
b0 /
0.
b1111 -
b0 ,
0+
b1110 *
b0 )
1(
b1110 '
b1111111111111110 &
b0 %
b0 $
b0 #
1"
b1111111111111110 !
$end
#10
b1111111111111101 !
b1111111111111101 &
b1101 *
b1 )
b1 ,
b1 /
b1 2
b1 #
b1 %
b1 $
#20
b1111111111111011 !
b1111111111111011 &
b1011 *
b10 )
b10 ,
b10 /
b10 2
b10 #
b10 %
b10 $
#30
b1111111111110111 !
b1111111111110111 &
b111 *
b11 )
b11 ,
b11 /
b11 2
b11 #
b11 %
b11 $
#40
b1110 -
1+
0(
b1101 '
b1101 5
b1111111111101111 !
b1111111111101111 &
b1111 *
b1 4
b0 )
b0 ,
b0 /
b0 2
b100 #
b100 %
b100 $
#50
b1111111111011111 !
b1111111111011111 &
b1101 -
b1 )
b1 ,
b1 /
b1 2
b101 #
b101 %
b101 $
#60
b1111111110111111 !
b1111111110111111 &
b1011 -
b10 )
b10 ,
b10 /
b10 2
b110 #
b110 %
b110 $
#70
b1111111101111111 !
b1111111101111111 &
b111 -
b11 )
b11 ,
b11 /
b11 2
b111 #
b111 %
b111 $
#80
b1110 0
1.
0+
b1011 '
b1011 5
b1111111011111111 !
b1111111011111111 &
b1111 -
b10 4
b0 )
b0 ,
b0 /
b0 2
b1000 #
b1000 %
b1000 $
#90
b1111110111111111 !
b1111110111111111 &
b1101 0
b1 )
b1 ,
b1 /
b1 2
b1001 #
b1001 %
b1001 $
#100
b1111101111111111 !
b1111101111111111 &
b1011 0
b10 )
b10 ,
b10 /
b10 2
b1010 #
b1010 %
b1010 $
#110
b1111011111111111 !
b1111011111111111 &
b111 0
b11 )
b11 ,
b11 /
b11 2
b1011 #
b1011 %
b1011 $
#120
b1110 3
11
0.
b111 '
b111 5
b1110111111111111 !
b1110111111111111 &
b1111 0
b11 4
b0 )
b0 ,
b0 /
b0 2
b1100 #
b1100 %
b1100 $
#130
b1101111111111111 !
b1101111111111111 &
b1101 3
b1 )
b1 ,
b1 /
b1 2
b1101 #
b1101 %
b1101 $
#140
b1011111111111111 !
b1011111111111111 &
b1011 3
b10 )
b10 ,
b10 /
b10 2
b1110 #
b1110 %
b1110 $
#150
b111111111111111 !
b111111111111111 &
b111 3
b11 )
b11 ,
b11 /
b11 2
b1111 #
b1111 %
b1111 $
#160
01
b1111111111111111 !
b1111111111111111 &
b1111 3
b0 4
b0 )
b0 ,
b0 /
b0 2
b1111 '
b1111 5
b0 #
b0 %
0"
b0 $
#170
b1 )
b1 ,
b1 /
b1 2
b1 #
b1 %
b1 $
#180
b10 )
b10 ,
b10 /
b10 2
b10 #
b10 %
b10 $
#190
b11 )
b11 ,
b11 /
b11 2
b11 #
b11 %
b11 $
#200
b1 4
b0 )
b0 ,
b0 /
b0 2
b100 #
b100 %
b100 $
#210
b1 )
b1 ,
b1 /
b1 2
b101 #
b101 %
b101 $
#220
b10 )
b10 ,
b10 /
b10 2
b110 #
b110 %
b110 $
#230
b11 )
b11 ,
b11 /
b11 2
b111 #
b111 %
b111 $
#240
b10 4
b0 )
b0 ,
b0 /
b0 2
b1000 #
b1000 %
b1000 $
#250
b1 )
b1 ,
b1 /
b1 2
b1001 #
b1001 %
b1001 $
#260
b10 )
b10 ,
b10 /
b10 2
b1010 #
b1010 %
b1010 $
#270
b11 )
b11 ,
b11 /
b11 2
b1011 #
b1011 %
b1011 $
#280
b11 4
b0 )
b0 ,
b0 /
b0 2
b1100 #
b1100 %
b1100 $
#290
b1 )
b1 ,
b1 /
b1 2
b1101 #
b1101 %
b1101 $
#300
b10 )
b10 ,
b10 /
b10 2
b1110 #
b1110 %
b1110 $
#310
b11 )
b11 ,
b11 /
b11 2
b1111 #
b1111 %
b1111 $
#320
b10000 $
